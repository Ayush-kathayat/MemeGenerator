{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming stuff\\\\MemeGenerator\\\\src\\\\THA-22\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./style.css\";\nimport Temp from \"./Temp\";\nimport Meme from \"./Meme\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [temp, setTemp] = useState([]);\n  const [meme, setMeme] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => {\n      setTemp(data.data.memes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), meme === null ? /*#__PURE__*/_jsxDEV(Temp, {\n      temp: temp,\n      setMeme: setMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Meme, {\n      meme: meme,\n      setMeme: setMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"W7brGwZ2uci2JcxnpjV6BZ9ACfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Programming stuff/MemeGenerator/src/THA-22/App.jsx"],"names":["React","Temp","Meme","useState","useEffect","App","temp","setTemp","meme","setMeme","fetch","then","res","json","data","memes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZP,MAAAA,OAAO,CAACO,IAAI,CAACA,IAAL,CAAUC,KAAX,CAAP;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,IAAI,KAAK,IAAT,gBAAiB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAkB,MAAA,OAAO,EAAEG;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAA4D,QAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,OAAO,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFjE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;GAAMJ,G;;KAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\nimport Temp from \"./Temp\"\r\nimport Meme from \"./Meme\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n    const [temp, setTemp] = useState([]);\r\n    const [meme, setMeme] = useState(null);\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setTemp(data.data.memes);\r\n            })\r\n    }, []);\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Meme Generator</h1>\r\n            {meme === null ? (<Temp temp={temp} setMeme={setMeme} />) : (<Meme meme={meme} setMeme={setMeme} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}